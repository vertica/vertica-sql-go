name: CI

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.19', '1.18', '1.17', '1.16', '1.15']

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - name: Set up a Vertica server
        timeout-minutes: 15
        run: |
          docker run -d -p 5433:5433 -p 5444:5444 \
            --name vertica_docker \
            vertica/vertica-ce:12.0.2-0
          echo "Vertica startup ..."
          until docker exec vertica_docker test -f /data/vertica/VMart/agent_start.out; do \
            echo "..."; \
            sleep 3; \
          done;
          echo "Vertica is up"
          docker exec -u dbadmin vertica_docker /opt/vertica/bin/vsql -c "\l"
          docker exec -u dbadmin vertica_docker /opt/vertica/bin/vsql -c "select version()"

      - name: Generating certs
        run: |
          ./resources/tests/genCerts.sh

      - name: Run tests without TLS
        run: |
          go test -race . -args --locator localhost:5433 --user dbadmin
          go test -race . -args --locator localhost:5433 --user dbadmin --use_prepared_statements=0
          go test -race ./logger

      - name: Turning on TLS in the database
        run: |
          docker exec -u dbadmin vertica_docker /opt/vertica/bin/vsql -c "CREATE CA CERTIFICATE root_ca AS '`cat ./resources/tests/ssl/rootCA.crt`';"
          docker exec -u dbadmin vertica_docker /opt/vertica/bin/vsql -c "CREATE KEY server_key TYPE 'RSA' AS '`cat ./resources/tests/ssl/server.key`';"
          docker exec -u dbadmin vertica_docker /opt/vertica/bin/vsql -c "CREATE CERTIFICATE server AS '`cat ./resources/tests/ssl/server.crt`' KEY server_key;"
          docker exec -u dbadmin vertica_docker /opt/vertica/bin/vsql -c "ALTER TLS CONFIGURATION server CERTIFICATE server TLSMODE 'ENABLE';"

      - name: Testing with --tlsmode=server
        run: |
          go test -race . -args --locator localhost:5433 --user dbadmin --tlsmode=server
          go test -race . -args --locator localhost:5433 --user dbadmin --tlsmode=server --use_prepared_statements=0

      - name: Setting SSLCa in the database
        run: |
          docker exec -u dbadmin vertica_docker /opt/vertica/bin/vsql -c "ALTER TLS CONFIGURATION server ADD CA CERTIFICATES root_ca TLSMODE 'VERIFY_CA';"

      - name: Testing with --tlsmode=custom
        run: |
          go test -race . -args --locator localhost:5433 --user dbadmin --tlsmode=custom
          go test -race . -args --locator localhost:5433 --user dbadmin --tlsmode=custom --use_prepared_statements=0
